{"version":3,"sources":["images/exploreBaseballStadiums.PNG","images/veterans.PNG","images/chaseDeposits.PNG","images/bikeroute.png","images/HurricanePreparedness-thumbnail.png","images/projectSystems.PNG","images/DOTD.png","images/baseball.jpg","images/HGAC.png","images/cropped2.jpg","containers/resume.js","containers/portfolio.js","containers/home.js","containers/Header.js","containers/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Resume","react_default","a","createElement","Container_default","Row_default","Col_default","sm","md","src","HGAC","alt","DOTD","Component","StyledHR","styled","hr","_templateObject","Portfolio","Image_default","Baseball","fluid","Button_default","variant","size","href","target","Veterans","Chase","Bike","Hurricane","Projects","Home","Card_default","border","style","width","Img","Body","Title","block","StyledTitle","TopNavTitle","Header_templateObject","StyledNav","TopNav","_templateObject2","StyledLink","TopNavLink","_templateObject3","StyledList","TopNavList","_templateObject4","Contact","div","App_templateObject","App_templateObject2","App","className","TopNav_default","Avatar_default","Michael","margin","height","as","Link","to","NavLink","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","CalciteThemeProvider_default","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1651cb31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/exploreBaseballStadiums.8a787185.PNG\";","module.exports = __webpack_public_path__ + \"static/media/veterans.c328f868.PNG\";","module.exports = __webpack_public_path__ + \"static/media/chaseDeposits.5f518fb9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/bikeroute.1ba4f0bb.png\";","module.exports = __webpack_public_path__ + \"static/media/HurricanePreparedness-thumbnail.274f440a.png\";","module.exports = __webpack_public_path__ + \"static/media/projectSystems.03caefa9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/DOTD.3eb1dd0b.png\";","module.exports = __webpack_public_path__ + \"static/media/baseball.017adb84.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HGAC.affe852b.png\";","module.exports = __webpack_public_path__ + \"static/media/cropped2.00c7554c.jpg\";","import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n// Import the images that will be displayed on the page\r\nimport HGAC from \"../images/HGAC.png\";\r\nimport DOTD from \"../images/DOTD.png\";\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2>Work Experience</h2>\r\n                <br/>\r\n                <Row>\r\n                    <Col sm={4} md={3}>\r\n                        <img src={HGAC} alt=\"H-GAC logo\" />\r\n                    </Col>\r\n                    <Col sm={8} md={9}>\r\n                        <h3><strong>Houston-Galveston Area Council</strong><br />GIS Analyst/Developer</h3>\r\n                        <h4>November 2018 - Present | Houston, Texas</h4>\r\n                        <p>\r\n                            Develop GIS applications for external and internal usage. Create and update REST\r\n                            services to H-GAC's ArcGIS Server. Create new features in the department's SDE evnironment.\r\n                            Develop customized widgets that are used within ESRI's Web AppBuilder. Majority of the\r\n                            applications are developed with Web AppBuilder.\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={4} md={3}>\r\n                        <img src={DOTD} alt=\"DOTD logo\" />\r\n                    </Col>\r\n                    <Col sm={8} md={9}>\r\n                        <h3><strong>Louisiana Department of Transportation and Development</strong><br />GIS Specialist</h3>\r\n                        <h4>September 2017 - November 2018 | Baton Rouge, Louisiana</h4>\r\n                        <p>\r\n                            Develop GIS products for applications from Digital Elevation Models (DEMs), large point clouds, and bare-earth terrain. These products are used\r\n                            for topographic mapping and real-time analysis by DOTD, other public agencies, and private entities. Assist DOTD's Mapping Unit to assure\r\n                            consistent use of the GIS products. Create and performs the QA/QC procedures.\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={4} md={3}>\r\n                        <img src={DOTD} alt=\"DOTD logo\" />\r\n                    </Col>\r\n                    <Col sm={8} md={9}>\r\n                        <h3><strong>Louisiana Department of Transportation and Development</strong><br />GIS Specialist</h3>\r\n                        <h4>May 2014 - September 2017 | Baton Rouge, Louisiana</h4>\r\n                        <p>\r\n                            Created and updated maps of Louisiana roads based on intradepartmental and outside requests. Wrote and developed Python scripts for daily work\r\n                            processes and special projects for people with limited GIS experience. Generated and uploaded REST services to DOTD's ArcGIS Server.\r\n                            Experience creating and editing feature classes within an ArcSDE environment. Created web applications.\r\n                            Support the Emergency Operations Center with map creation to show\r\n                            roads closed due to the natural disaster event. These maps are used by the Governor of the state and the Secretary of the Department to help\r\n                            make possible live saving decisions.\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\r\n\r\nimport styled from 'styled-components';\r\n\r\n//Images for the thumbnails\r\nimport Baseball from \"../images/exploreBaseballStadiums.PNG\";\r\nimport Veterans from \"../images/veterans.PNG\";\r\nimport Chase from \"../images/chaseDeposits.PNG\";\r\nimport Bike from \"../images/bikeroute.png\";\r\nimport Hurricane from \"../images/HurricanePreparedness-thumbnail.png\";\r\nimport Projects from \"../images/projectSystems.PNG\";\r\n\r\n\r\nconst StyledHR = styled.hr`\r\n    border: 1px solid gray;\r\n`\r\n\r\nclass Portfolio extends Component{\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <h1>Portfolio</h1>\r\n                <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Explore Baseball Stadiums</h4>\r\n                        <Image src={Baseball} fluid />\r\n                        <p><b>Tools Used:</b> jQuery, Leaflet, D3, geoJSON</p>\r\n                        <p>Each stadium has some basic facts about the stadium like when the stadium was built and the home team of the stadium. Other facts come from the\r\n                            2016 MLB season. These facts include average attendance, average time of game, anad average ticket price. Below the facts is a graph that displays\r\n                            every team's winning percentage at the stadium. The application also has searching functionality and a home button to get back to the initial\r\n                            extent.\r\n                        </p>\r\n                        <Button variant=\"outline-primary\" size=\"lg\" href=\"https://mtvetter.github.io/ExploreBaseballStadiums\" target=\"_blank\">Take a Look!</Button>\r\n                    </Col>\r\n                </Row>\r\n                <StyledHR />\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Veterans Across America</h4>\r\n                        <Image src={Veterans} fluid />\r\n                        <p><b>Tools Used:</b> jQuery, D3</p>\r\n                        <p>Each state has its veteran data displayed using D3. This was my first time using D3 so I was impressed with what the package can do. The initial\r\n                            display shows the percentage of population per state that are veterans. There is a dropdown option so that users can change the data. The bar graph\r\n                            is connected to the map so that when a user hovers over a bar the corresponding state is highlighted and vice versa.\r\n                        </p>\r\n                        <Button variant=\"outline-primary\" size=\"lg\" href=\"https://mtvetter.github.io/VeteransAcrossAmerica\" target=\"_blank\">Take a Look!</Button>\r\n                    </Col>\r\n                </Row>\r\n                <StyledHR />\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Chase Deposits Over Time</h4>\r\n                        <Image src={Chase} fluid />\r\n                        <p><b>Tools Used:</b> jQuery, Leaflet, geoJSON</p>\r\n                        <p>Every Chase bank keeps a tally of the number of deposits that each branch recieves every year. I took seven years worth of deposits and displayed\r\n                            the deposits by cities. I chose 21 cities to display the number of deposits. As the user clicks through the years, the points either grow or\r\n                            shrink based on the total number of deposits.\r\n                        </p>\r\n                        <Button variant=\"outline-primary\" size=\"lg\" href=\"https://mtvetter.github.io/ChaseDeposits\" target=\"_blank\">Take a Look!</Button>\r\n                    </Col>\r\n                </Row>\r\n                <StyledHR />\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Southern Africa Bike Route</h4>\r\n                        <Image src={Bike} fluid />\r\n                        <p><b>Tools Used:</b> Photoshop, Illustrator, ArcMap</p>\r\n                        <p>This map depicts a fictitious route for an international cycling competition. Photoshop was used to accentuate the shaded relief in the background.\r\n                            Illustrator was used to place the labels, graph, and scale bar.\r\n                        </p>\r\n                        <Button variant=\"outline-warning\" size=\"lg\" href=\"https://mtvetter.github.io/assets/bikeroute.png\" target=\"_blank\">Take a Look!</Button>\r\n                    </Col>\r\n                </Row>\r\n                <StyledHR />\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Hurricane Preparedness</h4>\r\n                        <Image src={Hurricane} fluid />\r\n                        <p><b>Tools Used:</b> Illustrator, ArcMap</p>\r\n                        <p>Growing up in Louisiana, hurricanes were always something that might occur during the summer. I created this infographic to show the states that\r\n                            have the highest potential of being hit by a hurricane. Along with showing the chances of being hit by a hurricane, the infographic also has\r\n                            some tips for people to be prepared in case a hurricane does hit their area.\r\n                        </p>\r\n                        <Button variant=\"outline-warning\" size=\"lg\" href=\"https://mtvetter.github.io/assets/MVetter_LongformInfographic.png\" target=\"_blank\">Take a Look!</Button>\r\n                    </Col>\r\n                </Row>\r\n                <StyledHR />\r\n                <Row>\r\n                    <Col>\r\n                        <h4>DOTD Projects</h4>\r\n                        <Image src={Projects} fluid />\r\n                        <p><b>Tools Used:</b> ArcGIS for JavaScript API, ESRI Linear Referencing API, ESRI REST API, jQuery, jQuery UI</p>\r\n                        <p>Inputting new projects for road construction was an archaic procedure where the user never had to look at a map. This causes problems since the user\r\n                            thinks they entered information in correctly only to find out later the project wasn't located in the correct location. The application allows the\r\n                            user to draw the project on the map and the information will be automatically populated for them. If something doesn't look correct, the user can\r\n                            change any of the values and these values will be kept when the user hits the submit button.\r\n                        </p>\r\n                        <Button variant=\"outline-primary\" size=\"lg\" href=\"https://mtvetter.github.io/ProjectSystems\" target=\"_blank\">Take a Look!</Button>\r\n                    </Col>\r\n                </Row>\r\n                <StyledHR />\r\n                {/* <Row>\r\n                    <Col sm={4}>\r\n                        <Card border=\"primary\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Baseball} />\r\n                            <Card.Body>\r\n                                <Card.Title>Explore Baseball Stadiums</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/ExploreBaseballStadiums\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card border=\"primary\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Veterans} />\r\n                            <Card.Body>\r\n                                <Card.Title>Veterans Across America</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/VeteransAcrossAmerica/\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card border=\"primary\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Chase} />\r\n                            <Card.Body>\r\n                                <Card.Title>Chase Deposits</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/ChaseDeposits/\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <Card border=\"warning\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Bike} />\r\n                            <Card.Body>\r\n                                <Card.Title>Southern Africa Bike Route</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/assets/bikeroute.png\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card border=\"warning\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Hurricane} />\r\n                            <Card.Body>\r\n                                <Card.Title>Hurricane Infographic</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/assets/MVetter_LongformInfographic.png\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row> */}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\r\n\r\n//Images to use\r\nimport Baseball from \"../images/exploreBaseballStadiums.PNG\";\r\nimport Veterans from \"../images/veterans.PNG\";\r\nimport Chase from \"../images/chaseDeposits.PNG\";\r\nimport Bike from \"../images/bikeroute.png\";\r\nimport Hurricane from \"../images/HurricanePreparedness-thumbnail.png\";\r\nimport Projects from \"../images/projectSystems.PNG\";\r\n\r\nclass Home extends Component{\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <h2>Hi! I'm Michael. I'm a GIS developer and cartographer.</h2>\r\n                <p>I enjoy creating cartographic products and creating new GIS applications.</p>\r\n                <br/>\r\n                <h4>Recent Works:</h4>\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <Card border=\"primary\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Baseball} />\r\n                            <Card.Body>\r\n                                <Card.Title>Explore Baseball Stadiums</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/ExploreBaseballStadiums\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card border=\"primary\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Veterans} />\r\n                            <Card.Body>\r\n                                <Card.Title>Veterans Across America</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/VeteransAcrossAmerica/\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card border=\"primary\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Chase} />\r\n                            <Card.Body>\r\n                                <Card.Title>Chase Deposits</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/ChaseDeposits/\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <Card border=\"warning\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Bike} />\r\n                            <Card.Body>\r\n                                <Card.Title>Southern Africa Bike Route</Card.Title>\r\n                                <Button variant=\"warning\" block href=\"https://mtvetter.github.io/assets/bikeroute.png\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card border=\"warning\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Hurricane} />\r\n                            <Card.Body>\r\n                                <Card.Title>Hurricane Infographic</Card.Title>\r\n                                <Button variant=\"warning\" block href=\"https://mtvetter.github.io/assets/MVetter_LongformInfographic.png\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card border=\"primary\" style={{width: \"18rem\"}}>\r\n                            <Card.Img variant=\"top\" src={Projects} />\r\n                            <Card.Body>\r\n                                <Card.Title>Project Systems</Card.Title>\r\n                                <Button variant=\"primary\" block href=\"https://mtvetter.github.io/ProjectSystems\" target=\"_blank\">Take a Look!</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nimport TopNav, {\r\n    TopNavTitle,\r\n    TopNavList,\r\n    TopNavLink\r\n} from 'calcite-react/TopNav';\r\n\r\nimport Avatar from 'calcite-react/Avatar';\r\nimport Michael from \"../images/baseball.jpg\";\r\nimport Resume from \"./resume\";\r\nimport Portfolio from \"./portfolio\";\r\nimport Home from \"./home\";\r\n\r\nconst StyledTitle = styled(TopNavTitle)`\r\n  color: white;\r\n  font-size: 2em;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledNav = styled(TopNav)`\r\n  background-color: green;\r\n`\r\nconst StyledLink = styled(TopNavLink)`\r\n    color: white;\r\n    font-size: 1em;\r\n    :hover{\r\n        color: red;\r\n        border-bottom-color: red;\r\n        text-decoration: none;\r\n    }\r\n    text-decoration: none;\r\n    padding-top: 0px;\r\n    padding-left: 15px;\r\n`\r\n\r\nconst StyledList = styled(TopNavList)`\r\n    margin-left: 2em;\r\n`\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StyledNav>\r\n                    <Avatar src={Michael} style={{margin: '10px', width: 60, height: 60}} />\r\n                    <StyledTitle as={Link} to=\"/\">Michael Vetter</StyledTitle>\r\n                    <StyledList>\r\n                    <StyledLink as={NavLink} to=\"/resume\">Resume</StyledLink>\r\n                    <StyledLink as={NavLink} to=\"/portfolio\">Portfolio</StyledLink>\r\n                    <StyledLink href=\"https://mtvetter.github.io/contact.html\">Contact</StyledLink>\r\n                    </StyledList>\r\n                </StyledNav>\r\n\r\n                <Route exact path=\"/\" component={Home} />;\r\n                <Route path=\"/resume\" component={Resume} />\r\n                <Route path=\"/portfolio\" component={Portfolio} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass Contact extends Component{\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2>Feel free to contact me:</h2>\r\n                <br />\r\n                <h4>Email: <a href=\"mailto:mtvetterla@gmail.com\" target=\"_blank\">mtvetterla@gmail.com</a></h4>\r\n                <h4>Github: <a href=\"https://github.com/MTVetter\">MTVetter</a></h4>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\n\nimport Header from './containers/Header';\nimport Resume from './containers/resume';\nimport Portfolio from './containers/portfolio';\nimport Home from \"./containers/home\";\nimport Contact from \"./containers/contact\";\n\nimport TopNav, {\n  TopNavTitle,\n  TopNavList,\n  TopNavLink\n} from 'calcite-react/TopNav';\nimport Avatar from 'calcite-react/Avatar';\nimport Michael from \"./images/cropped2.jpg\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\n\n\nconst AppDiv = styled.div`\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n`\n\nconst ContainerDiv = styled.div`\n  flex: 1;\n  margin: 1% 17% 3% 17%;\n`\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TopNav>\n          <Avatar src={Michael} style={{margin: '10px', width: 60, height: 60}} />\n          <TopNavTitle as={Link} to=\"/\">Michael Vetter</TopNavTitle>\n          <TopNavList>\n            <TopNavLink as={NavLink} to=\"/resume\">Resume</TopNavLink>\n            <TopNavLink as={NavLink} to=\"/portfolio\">Portfolio</TopNavLink>\n            <TopNavLink as={NavLink} to=\"/contact\">Contact</TopNavLink>\n          </TopNavList>\n        </TopNav>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/portfolio\" component={Portfolio} />\n        <Route path=\"/contact\" component={Contact} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport CalciteThemeProvider from 'calcite-react/CalciteThemeProvider';\nimport { \n    HashRouter as Router,\n    Route,\n    Link,\n    NavLink\n} from \"react-router-dom\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <CalciteThemeProvider>\n        <Router>\n            <App />\n        </Router>\n    </CalciteThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}